/* tslint:disable */
/* eslint-disable */
/**
 * 出席くんAPI
 * 出席くんAPI
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: tkc@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface GetUsers200Response
 */
export interface GetUsers200Response {
    /**
     * 
     * @type {Array<User>}
     * @memberof GetUsers200Response
     */
    data?: Array<User>;
}

/**
 * Check if a given object implements the GetUsers200Response interface.
 */
export function instanceOfGetUsers200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetUsers200ResponseFromJSON(json: any): GetUsers200Response {
    return GetUsers200ResponseFromJSONTyped(json, false);
}

export function GetUsers200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUsers200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(UserFromJSON)),
    };
}

export function GetUsers200ResponseToJSON(value?: GetUsers200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(UserToJSON)),
    };
}

