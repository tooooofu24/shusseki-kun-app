/* tslint:disable */
/* eslint-disable */
/**
 * 出席くんAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Subject } from "./Subject";
import {
  SubjectFromJSON,
  SubjectFromJSONTyped,
  SubjectToJSON,
} from "./Subject";

/**
 *
 * @export
 * @interface SubjectsGet200Response
 */
export interface SubjectsGet200Response {
  /**
   *
   * @type {Subject}
   * @memberof SubjectsGet200Response
   */
  data?: Subject;
}

/**
 * Check if a given object implements the SubjectsGet200Response interface.
 */
export function instanceOfSubjectsGet200Response(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function SubjectsGet200ResponseFromJSON(
  json: any
): SubjectsGet200Response {
  return SubjectsGet200ResponseFromJSONTyped(json, false);
}

export function SubjectsGet200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SubjectsGet200Response {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data") ? undefined : SubjectFromJSON(json["data"]),
  };
}

export function SubjectsGet200ResponseToJSON(
  value?: SubjectsGet200Response | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data: SubjectToJSON(value.data),
  };
}
