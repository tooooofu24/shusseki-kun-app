/* tslint:disable */
/* eslint-disable */
/**
 * 出席くんAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface UsersGet400Response
 */
export interface UsersGet400Response {
  /**
   *
   * @type {string}
   * @memberof UsersGet400Response
   */
  error?: string;
  /**
   *
   * @type {number}
   * @memberof UsersGet400Response
   */
  code?: number;
  /**
   *
   * @type {string}
   * @memberof UsersGet400Response
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof UsersGet400Response
   */
  displayMessage?: string;
  /**
   *
   * @type {object}
   * @memberof UsersGet400Response
   */
  detail?: object;
}

/**
 * Check if a given object implements the UsersGet400Response interface.
 */
export function instanceOfUsersGet400Response(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UsersGet400ResponseFromJSON(json: any): UsersGet400Response {
  return UsersGet400ResponseFromJSONTyped(json, false);
}

export function UsersGet400ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UsersGet400Response {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    error: !exists(json, "error") ? undefined : json["error"],
    code: !exists(json, "code") ? undefined : json["code"],
    message: !exists(json, "message") ? undefined : json["message"],
    displayMessage: !exists(json, "displayMessage")
      ? undefined
      : json["displayMessage"],
    detail: !exists(json, "detail") ? undefined : json["detail"],
  };
}

export function UsersGet400ResponseToJSON(
  value?: UsersGet400Response | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    error: value.error,
    code: value.code,
    message: value.message,
    displayMessage: value.displayMessage,
    detail: value.detail,
  };
}
