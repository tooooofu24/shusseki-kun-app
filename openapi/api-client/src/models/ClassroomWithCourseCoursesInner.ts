/* tslint:disable */
/* eslint-disable */
/**
 * 出席くんAPI
 * 出席くんAPI
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: tkc@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Classroom } from './Classroom';
import {
    ClassroomFromJSON,
    ClassroomFromJSONTyped,
    ClassroomToJSON,
} from './Classroom';
import type { Score } from './Score';
import {
    ScoreFromJSON,
    ScoreFromJSONTyped,
    ScoreToJSON,
} from './Score';
import type { Subject } from './Subject';
import {
    SubjectFromJSON,
    SubjectFromJSONTyped,
    SubjectToJSON,
} from './Subject';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface ClassroomWithCourseCoursesInner
 */
export interface ClassroomWithCourseCoursesInner {
    /**
     * 
     * @type {number}
     * @memberof ClassroomWithCourseCoursesInner
     */
    id?: number;
    /**
     * 
     * @type {User}
     * @memberof ClassroomWithCourseCoursesInner
     */
    user?: User;
    /**
     * 
     * @type {Classroom}
     * @memberof ClassroomWithCourseCoursesInner
     */
    classroom?: Classroom;
    /**
     * 
     * @type {Subject}
     * @memberof ClassroomWithCourseCoursesInner
     */
    subject?: Subject;
    /**
     * 
     * @type {Array<Score>}
     * @memberof ClassroomWithCourseCoursesInner
     */
    scores?: Array<Score>;
    /**
     * 
     * @type {Date}
     * @memberof ClassroomWithCourseCoursesInner
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ClassroomWithCourseCoursesInner
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the ClassroomWithCourseCoursesInner interface.
 */
export function instanceOfClassroomWithCourseCoursesInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClassroomWithCourseCoursesInnerFromJSON(json: any): ClassroomWithCourseCoursesInner {
    return ClassroomWithCourseCoursesInnerFromJSONTyped(json, false);
}

export function ClassroomWithCourseCoursesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClassroomWithCourseCoursesInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'classroom': !exists(json, 'classroom') ? undefined : ClassroomFromJSON(json['classroom']),
        'subject': !exists(json, 'subject') ? undefined : SubjectFromJSON(json['subject']),
        'scores': !exists(json, 'scores') ? undefined : ((json['scores'] as Array<any>).map(ScoreFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function ClassroomWithCourseCoursesInnerToJSON(value?: ClassroomWithCourseCoursesInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': UserToJSON(value.user),
        'classroom': ClassroomToJSON(value.classroom),
        'subject': SubjectToJSON(value.subject),
        'scores': value.scores === undefined ? undefined : ((value.scores as Array<any>).map(ScoreToJSON)),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

